[package]
name = "dimension-bridge"
version = "0.2.0"
edition = "2024"
description = "Automated certificate lifecycle management system that bridges the gap between PKI complexity and service simplicity."
license = "Apache-2.0"
repository = "https://github.com/appleparan/dimension-bridge"
readme = "README.md"
keywords = ["certificate", "pki", "automation", "lifecycle", "tls"]
categories = ["cryptography", "network-programming", "web-programming"]

[dependencies]
# Core async runtime
tokio = { version = "1.0", default-features = false, features = ["fs", "time", "rt-multi-thread", "macros"] }
# HTTP client for notifications
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"] }
# JSON serialization for notifications
serde_json = "1.0"
# Date/time handling
chrono = { version = "0.4", default-features = false, features = ["serde", "clock"] }
# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", default-features = false, features = ["fmt", "env-filter"] }

[dev-dependencies]
# Testing framework
tokio-test = "0.4"
# Temporary files and directories for testing
tempfile = "3.0"
# HTTP mocking for Slack webhook tests
wiremock = "0.6"
# Sequential test execution for file system tests
serial_test = "3.0"
# CLI testing utilities
assert_cmd = "2.0"
predicates = "3.0"
# Test utilities
rstest = "0.18"
# Async testing helpers
futures = "0.3"

[features]
default = []

# Lint
[lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"
unused_imports = "warn"
unused_must_use = "warn"
variant_size_differences = "warn"
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_compatibility = { level = "warn", priority = -1 }

[lints.clippy]
# Lint groups (ordered by strictness)
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

# === SECURITY & CORRECTNESS ===
# Memory safety and error handling
unwrap_used = "deny"
expect_used = "warn"
panic = "deny"
todo = "warn"
unimplemented = "warn"
unreachable = "warn"
get_unwrap = "warn"
indexing_slicing = "warn"
fallible_impl_from = "warn"

# Type casting safety
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_precision_loss = "warn"
cast_sign_loss = "warn"
as_conversions = "warn"
ptr_as_ptr = "warn"

# String handling
string_slice = "warn"
str_to_string = "warn"
string_to_string = "warn"

# === PERFORMANCE ===
# Inefficient patterns
inefficient_to_string = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
needless_collect = "warn"
unnecessary_wraps = "warn"
redundant_clone = "warn"
clone_on_ref_ptr = "warn"

# === STYLE & MAINTAINABILITY ===
# Documentation
missing_errors_doc = "warn"
missing_panics_doc = "warn"
missing_safety_doc = "warn"
undocumented_unsafe_blocks = "deny"

# Code clarity
implicit_clone = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
redundant_else = "warn"
semicolon_if_nothing_returned = "warn"
single_match_else = "warn"

# === COMPLEXITY ===
# Cognitive complexity
cognitive_complexity = "warn"
type_complexity = "warn"

# === ASYNC/CONCURRENCY ===
# Async best practices
future_not_send = "warn"
unused_async = "warn"

# === CRYPTO & SECURITY ===
# Cryptographic best practices (for certificate management)
print_stdout = "allow"  # CLI application needs stdout
print_stderr = "allow"  # CLI application needs stderr
dbg_macro = "warn"

# === ALLOW OVERRIDES ===
# Allow some pedantic lints that can be too noisy for this domain
module_name_repetitions = "allow"
struct_excessive_bools = "allow"
too_many_lines = "allow"
# Allow in certificate management context
similar_names = "allow"
wildcard_imports = "allow"

# === CARGO LINT EXCEPTIONS ===
# Multiple crate versions are common in dev dependencies and don't affect runtime
multiple_crate_versions = "allow"
